buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.4"
    id 'com.matthewprenger.cursegradle' version '1.2.0'
}

apply plugin: "net.minecraftforge.gradle"

version = project.mc_version + "-" + project.mod_version

archivesBaseName = project.mod_name

dependencies {
    compile project(':crafts')
    minecraft([
        group: "net.minecraftforge",
        name: "forge",
        version: "${project.mc_version}-${project.forge_version}"
    ])
}

shadowJar {
    classifier ''

    dependencies {
        include(project(":core"))
    }

    exclude 'dummyThing'
}

minecraft {
    mappings channel: "snapshot", version: project.mcp_mappings

    runs {
        client {
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run')
        }
        server {
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run')
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.mod_version
    inputs.property "mcversion", project.mc_version

    // replace stuff in mcmod.info, nothing else
    from(project(":core").sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.mod_version, 'mcversion': project.mc_version
    }

    // copy everything else except the mcmod.info
    from(project(":core").sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

}

//sourceJar {
//    classifier 'sources'
//    // copy all the minecraftforge specific classes
//    from sourceSets.main.allSource
//
//    // copy everything else except the mcmod.info
//    from(project(":core").sourceSets.main.allSource) {
//        exclude 'mcmod.info'
//    }
//}

//reobf { //TODO do we need this?
//    shadowJar { mappingType = 'SEARGE' }
//}

//tasks.shadowJar.finalizedBy reobfShadowJar //TODO do we need this?

curseforge {
    if (project.hasProperty('CURSEFORGE_API_TOKEN') && project.hasProperty('release')) {
        apiKey = CURSEFORGE_API_TOKEN
    }
    project {
        id = project.curse_id
        addGameVersion '1.15.2'
        releaseType = project.curse_release_type
        mainArtifact(shadowJar) {
            displayName = "$rootProject.name-$version"
        }
    }
}